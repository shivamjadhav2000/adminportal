{"version":3,"sources":["components/Main.js","components/Dialogs/Alert.js","components/table.js","components/Dialogs/form.js","components/cards.js","components/RouterComponents/Buyer/Buyer.js","components/RouterComponents/CategoryAndSubCategory/CategoryAndSubCategory.js","components/RouterComponents/ContentManagementSystem/ContentManagementSystem.js","components/RouterComponents/Feature/Feature.js","components/RouterComponents/ListingManagement/ListingManagement.js","components/RouterComponents/Payment/Payment.js","components/RouterComponents/Subscription/Subscription.js","components/RouterComponents/Report/Report.js","components/RouterComponents/Seller/Seller.js","App.js","serviceWorker.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","IconHover","color","background","borderRadius","DashBoard","DashbdText","marginLeft","DashbdIcon","margin","Icons","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","Bell","content","flexGrow","Main","props","classes","useTheme","React","useState","open","setOpen","LinkStyle","textDecoration","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","direction","Divider","List","to","style","ListItem","button","ListItemIcon","ListItemText","primary","children","Transition","forwardRef","ref","Slide","AlertDialogSlide","handleClose","Button","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","dark","title","flex","EnhancedTableToolbar","component","Tooltip","marginBottom","table","minWidth","border","clip","height","overflow","top","MyTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","size","target","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","dummy","about","Card","fontSize","App","path","exact","i","idx","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4e98c7eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { Link } from \"react-router-dom\";\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport SettingsSystemDaydreamIcon from '@material-ui/icons/SettingsSystemDaydream';\r\nconst drawerWidth = 300;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  IconHover:{\r\n        \"&:hover\":{\r\n          color:\"white\",\r\n         \r\n          background:'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n          borderRadius:\"20px\",\r\n        }\r\n  },\r\n  DashBoard:{\r\n    color:\"white\",\r\n    background:'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius:\"20px\",\r\n    \r\n\r\n  },\r\n  DashbdText:{marginLeft:\"36px\"},\r\n  DashbdIcon:{\r\n    color:\"white\",\r\n    margin:\"20\",\r\n  },\r\n  Icons:{\r\n    color:\"white\",\r\n  },\r\n  appBar: {\r\n      background:'white',\r\n      color:'black',\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    background: '#273146 !important',\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    background: '#273146 !important',\r\n    width: drawerWidth,\r\n    color:\"#9098ac\",\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    background: '#273146 !important',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    \r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n Bell:{\r\n   marginLeft:\"70%\"\r\n },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  \r\n}));\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const LinkStyle={\r\n    color:\"#9098ac\",\r\n    textDecoration: 'none'\r\n    \r\n  }\r\n  \r\n   const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            True Barter\r\n           \r\n            \r\n          </Typography>\r\n        </Toolbar>\r\n        \r\n      </AppBar>\r\n      \r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <List>\r\n            \r\n            <Link to=\"/\" style={LinkStyle}>\r\n             <ListItem style={LinkStyle} button key=\"Dashboard\" className={clsx(classes.DashBoard)}>\r\n                    <ListItemIcon className={clsx(classes.DashbdIcon)}>\r\n                        <DashboardIcon />\r\n                        <ListItemText primary=\"Dashboard\" className={clsx(classes.DashbdText)}/>\r\n                    </ListItemIcon>\r\n              </ListItem>\r\n              </Link>\r\n              \r\n              <Divider />\r\n          \r\n            <Link style={LinkStyle} to=\"/Buyer\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n               <StoreIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Buyer\" />\r\n            </ListItem>\r\n           </Link>\r\n           <Link style={LinkStyle} to=\"/Seller\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n                <LocalAtmIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Seller\" />\r\n            </ListItem>\r\n           </Link>\r\n           <Link style={LinkStyle} to=\"/ListingManagement\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n               <ListAltIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"ListingManagement\" />\r\n            </ListItem>\r\n           </Link>\r\n           <Link style={LinkStyle} to=\"/CategoryAndSubCategory\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n                <ClearAllIcon  />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"CategoryAndSubCategory\" />\r\n            </ListItem>\r\n           </Link>\r\n          \r\n        </List>\r\n        <Divider />\r\n        <List>\r\n            <Link style={LinkStyle} to=\"/Feature\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n            \r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n              <FeaturedPlayListIcon />\r\n                \r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Feature\" />\r\n            </ListItem>\r\n            </Link>\r\n            <Link style={LinkStyle} to=\"/Subscription\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n            \r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n                <SubscriptionsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Subscription\" />\r\n            </ListItem>\r\n            </Link>\r\n            <Link style={LinkStyle} to=\"/Payment\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n            \r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n                <AccountBalanceIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Payment\" />\r\n            </ListItem>\r\n            </Link>\r\n            <Link style={LinkStyle} to=\"/Report\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n            \r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n                <AssessmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Report\"/>\r\n            </ListItem>\r\n            </Link>\r\n            <Link style={LinkStyle} to=\"/ContentManagementSystem\">\r\n            <ListItem button  className={clsx(classes.IconHover)}>\r\n            \r\n              <ListItemIcon className={clsx(classes.Icons)}>\r\n              <SettingsSystemDaydreamIcon />  \r\n              </ListItemIcon>\r\n              <ListItemText primary=\"ContentManagementSystem\"/>\r\n            </ListItem>\r\n            </Link>\r\n           \r\n         \r\n        </List>\r\n      </Drawer>\r\n     \r\n\r\n      \r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n            \r\n        <div >\r\n        {props.children}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n       <DeleteOutlineIcon />\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are You Sure Want To Delete\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"./Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > span': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction EditIcon() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <Icon color=\"secondary\">add_circle</Icon>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        <EditIcon />\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import react from \"react\"\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport \"./cards.css\"\r\n\r\nlet dummy=[\r\n    {count:\"111\",about:\"Invoice\"},\r\n    {count:\"126\",about:\"Sales\"},\r\n    {count:\"222\",about:\"Revenue\"},\r\n\r\n]\r\nfunction Card(){\r\n    return (\r\n    <div className=\"CardHolder\">\r\n    <div className=\"Card\">\r\n        <div><p>{dummy[0].count}</p>\r\n        <h2>{dummy[0].about}</h2>\r\n        </div>\r\n        <div className=\"icon\">\r\n        <AssignmentIcon  style={{ fontSize: 50}} />\r\n        </div>\r\n    </div>\r\n    <div className=\"Card\">\r\n    <div>\r\n        <p>{dummy[1].count}</p>\r\n        <h2>{dummy[1].about}</h2>\r\n    </div>\r\n    <div className=\"icon\">\r\n        <AttachMoneyIcon style={{ fontSize: 50}} />\r\n        </div>\r\n    </div>\r\n    <div className=\"Card\">\r\n       <div>\r\n        <p>{dummy[2].count}</p>\r\n        <h2>{dummy[2].about}</h2>\r\n       </div> \r\n       <div className=\"icon\">\r\n        <AssessmentIcon style={{ fontSize: 50}} />\r\n        </div>\r\n    </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\nexport default Card","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <h3>BUYER Data</h3>\r\n\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <h3>CategoryAndSubCategory Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n     <h3>ContentManagementSystem Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <h3>Feature Management Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n     <h3>Listing Management Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n     <h3>Payment Management Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <h3>subscription Management Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <h3>Report Management Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AlertDialogSlide from \"../../Dialogs/Alert\"\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n         \r\n        ))}\r\n        <TableCell \r\n        align=\"right\"\r\n        >Edit</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          sales and reports\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MyTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <h3>seller Management Data</h3>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\"><AlertDialogSlide /></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport Main from './components/Main'\nimport MyTable from \"./components/table\";\nimport FormDialog from './components/Dialogs/form'\nimport Card from './components/cards'\nimport Buyer from './components/RouterComponents/Buyer/Buyer'\nimport CategoryAndSubCategory from './components/RouterComponents/CategoryAndSubCategory/CategoryAndSubCategory'\nimport  ContentManagementSystem from './components/RouterComponents/ContentManagementSystem/ContentManagementSystem'\nimport Feature from './components/RouterComponents/Feature/Feature'\nimport listingManagement from './components/RouterComponents/ListingManagement/ListingManagement'\nimport Payment from './components/RouterComponents/Payment/Payment'\nimport Subscription from './components/RouterComponents/Subscription/Subscription'\nimport Report from './components/RouterComponents/Report/Report'\nimport Seller from './components/RouterComponents/Seller/Seller'\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\"\nlet List=[Buyer,Seller,listingManagement,CategoryAndSubCategory,\n  Feature,Subscription,Payment,Report, ContentManagementSystem]\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n          <Main >\n       \n          <Card />\n          {/* <FormDialog /> */}\n         \n             <Switch>\n               <Route path=\"/\" exact component={MyTable} />\n               {\n                 ['Buyer', 'Seller', 'ListingManagement', 'CategoryAndSubCategory',\n                 \"Feature\",\"Subscription\",\"Payment\",\"Report\",\"ContentManagementSystem\"].map((i,idx)=>{\n                   return (\n                     <Route path={\"/\"+i} component={List[idx]}/>\n                   )\n                 })\n               }\n             </Switch>\n          \n          </Main>\n        \n          </Router>\n    \n    </div>\n  )\n}\n  \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    \n    <App />\n    \n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}